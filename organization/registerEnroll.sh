#!/bin/bash

CA_PATH=$1
CA_DEST=${2:-'org'}

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p $CA_DEST

  export FABRIC_CA_CLIENT_HOME=${PWD}/${CA_DEST}

  set -x
  $PWD/bin/fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   echo 'NodeOUs:
#   Enable: true
#   ClientOUIdentifier:
#     Certificate: cacerts/localhost-9054-ca-orderer.pem
#     OrganizationalUnitIdentifier: client
#   PeerOUIdentifier:
#     Certificate: cacerts/localhost-9054-ca-orderer.pem
#     OrganizationalUnitIdentifier: peer
#   AdminOUIdentifier:
#     Certificate: cacerts/localhost-9054-ca-orderer.pem
#     OrganizationalUnitIdentifier: admin
#   OrdererOUIdentifier:
#     Certificate: cacerts/localhost-9054-ca-orderer.pem
#     OrganizationalUnitIdentifier: orderer' > "${PWD}/${CA_DEST}/msp/config.yaml"

#   # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

#   # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
#   mkdir -p "${PWD}/${CA_DEST}/msp/tlscacerts"
#   cp "${PWD}/${CA_PATH}/ca-cert.pem" "${PWD}/${CA_DEST}/msp/tlscacerts/tlsca.zillabc.io-cert.pem"

#   # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
#   mkdir -p "${PWD}/${CA_DEST}/tlsca"
#   cp "${PWD}/${CA_PATH}/ca-cert.pem" "${PWD}/${CA_DEST}/tlsca/tlsca.zillabc.io-cert.pem"

#   echo "Registering orderer"
#   set -x
#   $PWD/bin/fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   echo "Registering the orderer admin"
#   set -x
#   $PWD/bin/fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   echo "Generating the orderer msp"
#   set -x
#   $PWD/bin/fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/msp" --tls.certfiles "${PWD}/${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   cp "${PWD}/${CA_DEST}/msp/config.yaml" "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/msp/config.yaml"

#   echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
#   set -x
#   $PWD/bin/fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls" --enrollment.profile tls --csr.hosts orderer.zillabc.io --csr.hosts localhost --tls.certfiles "${PWD}/${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
#   cp "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/tlscacerts/"* "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/ca.crt"
#   cp "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/signcerts/"* "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/server.crt"
#   cp "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/keystore/"* "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/server.key"

#   # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
#   mkdir -p "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/msp/tlscacerts"
#   cp "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/tls/tlscacerts/"* "${PWD}/${CA_DEST}/orderers/orderer.zillabc.io/msp/tlscacerts/tlsca.zillabc.io-cert.pem"

#   echo "Generating the admin msp"
#   set -x
#   $PWD/bin/fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/${CA_DEST}/users/Admin@zillabc.io/msp" --tls.certfiles "${PWD}/${CA_PATH}/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   cp "${PWD}/${CA_DEST}/msp/config.yaml" "${PWD}/${CA_DEST}/users/Admin@zillabc.io/msp/config.yaml"
}

createOrderer
